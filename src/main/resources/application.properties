# management.context-path=/admin

server.port=8080
# Packages
package.root=org.kth.HI1034
entity.package=org.kth.HI1034.model.test

#hibernate.showsql=true
#hibernate.show_sql=true
#hibernate.generate_statistics=true
#hibernate.use_sql_comments=true

#spring.profiles.active=h2
spring.data.title2=Create property

logging.level.org.springframework=INFO
logging.level.com.nixmash.springdata=INFO
logging.level.org.hibernate=OFF
logging.level.org.thymeleaf=ERROR

#spring.social.application.url=${appurl:http://localhost:9000}

# maximum profile image size 3MB
profile.image.upload.size=3145728

#github.repo.url=https://api.github.com/repos/mintster/spring-data
#github.user.url=https://api.github.com/users/mintster







# ===============================
# = DATA SOURCE
# ===============================




#----------------------MySQL-----------------------------
#db.url=jdbc:localhost:3306/TestDB
spring.jpa.database=MYSQL
spring.datasource.platform=sql


spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/testdb?verifyServerCertificate=false&useSSL=false&requireSSL=false
spring.http.encoding.charset=UTF-8

# Username and password
spring.datasource.username = root
spring.datasource.password = root

#spring.data.jpa.repositories.enabled=true
server.ssl.enabled=false



# Pool
spring.datasource.dbcp.max-active=50
spring.datasource.dbcp.max-idle=5
spring.datasource.dbcp.min-idle=5
spring.datasource.dbcp.initial-size=10

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the model manager).

# Show or not log for each sql query

hibernate.showsql=true




#spring.datasource.time-between-eviction-runs-millis=60000
#spring.datasource.min-evictable-idle-time-millis=300000

# Initialization
#spring.datasource.schema=classpath:/data/mysql/schema.sql
#spring.datasource.data=classpath:/data/mysql/data.sql

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the model manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

#none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#spring.datasource.time-between-eviction-runs-millis=60000
#spring.datasource.min-evictable-idle-time-millis=300000

# Initialization
#spring.datasource.schema=classpath:/data/mysql/schema.sql
#spring.datasource.data=classpath:/data/mysql/data.sql

# ###########################################################
# Hibernate Dialect Classes
# ###########################################################
# POSTGRESQL: MySQL5Dialect.class
# POSTGRESQL: MySQL5InnoDbDialect.class
# ###########################################################

# ###########################################################
# Hibernate HBM2DDL Setting
# ###########################################################
# "create"      - to build a new database on each run;
# "update"      - to modify an existing database;
# "create-drop" - means the same as "create" but also drops tables when Hibernate closes;
# "validate"    - makes no changes to the database
# ###########################################################